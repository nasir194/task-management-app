--> if children needs to update parent state, then parent theke function as a props pass kore state update korte hoy
      onAddModal={() => setShowModal(true)} - by clicking addTask, show modal opens. onAddModal pass as prop to where click event happen

AddTask Steps:
1. clicking add Task button, pop up the modal
2. handleAddTask will get a newtask obj from AddTaskModal components and setTasks to ([...tasks,newtask]) and close modal
    and pass this handler to the event where it happen (here click/submit)
3. Add Task ->
                form handling on AddTaskModal - create empty state obj
                                 - in input field give value, name, and onChange event
                                 - use handleChange handler to get new obj from Form and change the state variable by setter fn.
4. Delete Task ->
        handleDeleteTask get an id and delete it by filtering the main tasks
        handleDeleteAllTasks - tasks.length = 0; setTasks([...tasks]); //empty array, so TaskList will not render the table 
                             - and conditional rendering between TaskList and NoTaskFound components 
6. Edit Task -> 
    a. if a handler get obj/.. on its parameter[from click event], the nested fn can't pass this obj to as prop to the component in jsx.
            so, we need useState, and pass this obj as arg in setter fn, updated value by setter fn we pass it as prop to the component.
    b. from edit button click, we get related single obj and pass this to AddTaskModal. then this logic will show modal with data;
        task is assigned with taskToUpdate. 
                                const [task, setTask] = useState(
                                taskToUpdate || {
                                title: "",
                                description: "",
                                tags: [],
                                priority: "",
                                isFavorite: false,
                                }
                            ); 
    c.  how will form know whether it is addTask or editTask -> const [isAdd, setIsAdd] = useState(Object.is(taskToUpdate, null));
        handle_Add_Edit_Task -> To add and edit tasks, we need the task object and a boolean to check if it's an add or edit operation. 
7. Close Modal -> setShowModal(false);  setTaskToUpdate(null); 
8. 